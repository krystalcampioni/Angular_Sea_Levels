angular.module("weatherApp",["ngRoute","weatherApp.filters","weatherApp.services","weatherApp.directives","weatherApp.controllers","iso-3166-country-codes"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/forecast",{templateUrl:"forecast.html",controller:"OpenWeatherCtrl"}),$routeProvider.otherwise({redirectTo:"/forecast"})}]);
angular.module("weatherApp.services",["ngResource"]).value("cities",["Amsterdam","London","Berlin","Paris","Madrid"]).factory("openWeatherMap",function($resource){var apiKey="0ecce192500d1a71eb05d1ef815147cc",apiBaseUrl="http://api.openweathermap.org/data/2.5/";return $resource(apiBaseUrl+":path/:subPath?q=:location",{APPID:apiKey,mode:"json",callback:"JSON_CALLBACK",units:"metric",lang:"en"},{queryWeather:{method:"JSONP",params:{path:"weather"},isArray:!1,headers:{"x-api-key":apiKey}},queryForecast:{method:"JSONP",params:{path:"forecast",cnt:5},isArray:!1,headers:{"x-api-key":apiKey}},queryForecastDaily:{method:"JSONP",params:{path:"forecast",subPath:"daily",cnt:7},isArray:!1,headers:{"x-api-key":apiKey}}})});
angular.module("weatherApp.controllers",[]).controller("OpenWeatherCtrl",["$scope","openWeatherMap","cities","ISO3166",function($scope,openWeatherMap,cities,ISO3166){$scope.message="",$scope.hasState="",$scope.cities=cities,$scope.iconBaseUrl="http://openweathermap.org/img/w/",$scope.forecast=openWeatherMap.queryForecast({location:cities[0]}),$scope.getForecastByLocation=function(){$scope.forecast=openWeatherMap.queryForecast({location:$scope.location})},$scope.setLocation=function(loc){$scope.location=loc,$scope.getForecastByLocation()},$scope.getIconImageUrl=function(iconName){return iconName?$scope.iconBaseUrl+iconName+".png":""}}]);
angular.module("weatherApp.filters",[]).filter("interpolate",["version",function(version){return function(text){return String(text).replace(/\%VERSION\%/gm,version)}}]).filter("placeholder",[function(){return function(input,phvalue){return angular.isUndefined(input)||""==input?phvalue:input}}]);
angular.module("weatherApp.directives",[]).directive("forecastItem",[function(){return{scope:{useDayForecast:"=showEntry",forecast:"=forecastItem"},templateUrl:"_forecast-item.html",link:function(scope,element,attrs){scope.getIconImageUrl=function(iconName){return iconName?"http://openweathermap.org/img/w/"+iconName+".png":""},scope.parseDate=function(time){return new Date(1e3*time)}}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsInNlcnZpY2VzLmpzIiwiY29udHJvbGxlcnMuanMiLCJmaWx0ZXJzLmpzIiwiZGlyZWN0aXZlcy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwib3RoZXJ3aXNlIiwicmVkaXJlY3RUbyIsInZhbHVlIiwiZmFjdG9yeSIsIiRyZXNvdXJjZSIsImFwaUtleSIsImFwaUJhc2VVcmwiLCJBUFBJRCIsIm1vZGUiLCJjYWxsYmFjayIsInVuaXRzIiwibGFuZyIsInF1ZXJ5V2VhdGhlciIsIm1ldGhvZCIsInBhcmFtcyIsInBhdGgiLCJpc0FycmF5IiwiaGVhZGVycyIsIngtYXBpLWtleSIsInF1ZXJ5Rm9yZWNhc3QiLCJjbnQiLCJxdWVyeUZvcmVjYXN0RGFpbHkiLCJzdWJQYXRoIiwiJHNjb3BlIiwib3BlbldlYXRoZXJNYXAiLCJjaXRpZXMiLCJJU08zMTY2IiwibWVzc2FnZSIsImhhc1N0YXRlIiwiaWNvbkJhc2VVcmwiLCJmb3JlY2FzdCIsImxvY2F0aW9uIiwiZ2V0Rm9yZWNhc3RCeUxvY2F0aW9uIiwic2V0TG9jYXRpb24iLCJsb2MiLCJnZXRJY29uSW1hZ2VVcmwiLCJpY29uTmFtZSIsImZpbHRlciIsInZlcnNpb24iLCJ0ZXh0IiwiU3RyaW5nIiwicmVwbGFjZSIsImlucHV0IiwicGh2YWx1ZSIsImlzVW5kZWZpbmVkIiwiZGlyZWN0aXZlIiwic2NvcGUiLCJ1c2VEYXlGb3JlY2FzdCIsImxpbmsiLCJlbGVtZW50IiwiYXR0cnMiLCJwYXJzZURhdGUiLCJ0aW1lIiwiRGF0ZSJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVFDLE9BQU8sY0FDYixVQUNBLHFCQUNBLHNCQUNBLHdCQUNBLHlCQUNBLDJCQUVGQyxRQUFRLGlCQUFrQixTQUFTQyxnQkFDakNBLGVBQWVDLEtBQUssYUFBY0MsWUFBYSxnQkFBaUJDLFdBQVksb0JBQzVFSCxlQUFlSSxXQUFXQyxXQUFZO0FDVnhDUixRQUFRQyxPQUFPLHVCQUF3QixlQUNwQ1EsTUFBTSxVQUFVLFlBQVksU0FBUyxTQUFTLFFBQVEsV0FFdERDLFFBQVEsaUJBQWtCLFNBQVNDLFdBRWxDLEdBQUlDLFFBQVMsbUNBQ1RDLFdBQWEseUNBRWpCLE9BQU9GLFdBQVVFLFdBQWEsOEJBRTFCQyxNQUFPRixPQUNQRyxLQUFNLE9BQ05DLFNBQVUsZ0JBQ1ZDLE1BQU8sU0FDUEMsS0FBTSxPQUdOQyxjQUNFQyxPQUFRLFFBQ1JDLFFBQ0VDLEtBQU0sV0FFUkMsU0FBUyxFQUNUQyxTQUNFQyxZQUFhYixTQUdqQmMsZUFDRU4sT0FBUSxRQUNSQyxRQUNFQyxLQUFNLFdBQ05LLElBQUssR0FFUEosU0FBUyxFQUNUQyxTQUNFQyxZQUFhYixTQUdqQmdCLG9CQUNFUixPQUFRLFFBQ1JDLFFBQ0VDLEtBQU0sV0FDTk8sUUFBUyxRQUNURixJQUFLLEdBRVBKLFNBQVMsRUFDVEMsU0FDRUMsWUFBYWI7QUMvQ3pCWixRQUFRQyxPQUFPLDZCQUNaSyxXQUFXLG1CQUNULFNBQVMsaUJBQWlCLFNBQVMsVUFDbEMsU0FBU3dCLE9BQU9DLGVBQWVDLE9BQU9DLFNBRXhDSCxPQUFPSSxRQUFVLEdBQ2pCSixPQUFPSyxTQUFXLEdBRWxCTCxPQUFPRSxPQUFTQSxPQUNoQkYsT0FBT00sWUFBYyxtQ0FHckJOLE9BQU9PLFNBQVdOLGVBQWVMLGVBQy9CWSxTQUFVTixPQUFRLEtBSXBCRixPQUFPUyxzQkFBd0IsV0FDN0JULE9BQU9PLFNBQVdOLGVBQWVMLGVBQy9CWSxTQUFVUixPQUFPUSxZQU1yQlIsT0FBT1UsWUFBYyxTQUFTQyxLQUM1QlgsT0FBT1EsU0FBV0csSUFDbEJYLE9BQU9TLHlCQUdUVCxPQUFPWSxnQkFBa0IsU0FBU0MsVUFDaEMsTUFBUUEsVUFBV2IsT0FBT00sWUFBY08sU0FBVyxPQUFTO0FDL0JsRTNDLFFBQVFDLE9BQU8seUJBRVoyQyxPQUFPLGVBQWdCLFVBQVcsU0FBU0MsU0FDMUMsTUFBTyxVQUFTQyxNQUNkLE1BQU9DLFFBQU9ELE1BQU1FLFFBQVEsZ0JBQWlCSCxhQUloREQsT0FBTyxlQUFnQixXQUN0QixNQUFPLFVBQVVLLE1BQU1DLFNBQ3JCLE1BQVFsRCxTQUFRbUQsWUFBWUYsUUFBbUIsSUFBVEEsTUFBZUMsUUFBVUQ7QUNWckVqRCxRQUFRQyxPQUFPLDRCQUNabUQsVUFBVSxnQkFBZ0IsV0FDekIsT0FDRUMsT0FDRUMsZUFBZ0IsYUFDaEJqQixTQUFVLGlCQUdaaEMsWUFBYSxzQkFFYmtELEtBQU0sU0FBU0YsTUFBT0csUUFBU0MsT0FDN0JKLE1BQU1YLGdCQUFrQixTQUFTQyxVQUMvQixNQUFRQSxVQUFXLG1DQUFxQ0EsU0FBVyxPQUFTLElBRzlFVSxNQUFNSyxVQUFZLFNBQVVDLE1BQzFCLE1BQU8sSUFBSUMsTUFBWSxJQUFQRCIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ3dlYXRoZXJBcHAnLCBbXG4gICduZ1JvdXRlJyxcbiAgJ3dlYXRoZXJBcHAuZmlsdGVycycsXG4gICd3ZWF0aGVyQXBwLnNlcnZpY2VzJyxcbiAgJ3dlYXRoZXJBcHAuZGlyZWN0aXZlcycsXG4gICd3ZWF0aGVyQXBwLmNvbnRyb2xsZXJzJyxcbiAgXCJpc28tMzE2Ni1jb3VudHJ5LWNvZGVzXCJcbl0pLlxuY29uZmlnKFsnJHJvdXRlUHJvdmlkZXInLCBmdW5jdGlvbigkcm91dGVQcm92aWRlcikge1xuICAkcm91dGVQcm92aWRlci53aGVuKCcvZm9yZWNhc3QnLCB7dGVtcGxhdGVVcmw6ICdmb3JlY2FzdC5odG1sJywgY29udHJvbGxlcjogJ09wZW5XZWF0aGVyQ3RybCd9KTtcbiAgJHJvdXRlUHJvdmlkZXIub3RoZXJ3aXNlKHtyZWRpcmVjdFRvOiAnL2ZvcmVjYXN0J30pO1xufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3dlYXRoZXJBcHAuc2VydmljZXMnLCBbJ25nUmVzb3VyY2UnXSlcbiAgLnZhbHVlKCdjaXRpZXMnLFsnQW1zdGVyZGFtJywnTG9uZG9uJywnQmVybGluJywnUGFyaXMnLCdNYWRyaWQnXSlcblxuICAuZmFjdG9yeSgnb3BlbldlYXRoZXJNYXAnLCBmdW5jdGlvbigkcmVzb3VyY2UpIHtcblxuICAgIHZhciBhcGlLZXkgPSAnMGVjY2UxOTI1MDBkMWE3MWViMDVkMWVmODE1MTQ3Y2MnO1xuICAgIHZhciBhcGlCYXNlVXJsID0gJ2h0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41Lyc7XG5cbiAgICByZXR1cm4gJHJlc291cmNlKGFwaUJhc2VVcmwgKyAnOnBhdGgvOnN1YlBhdGg/cT06bG9jYXRpb24nLFxuICAgICAge1xuICAgICAgICBBUFBJRDogYXBpS2V5LFxuICAgICAgICBtb2RlOiAnanNvbicsXG4gICAgICAgIGNhbGxiYWNrOiAnSlNPTl9DQUxMQkFDSycsXG4gICAgICAgIHVuaXRzOiAnbWV0cmljJyxcbiAgICAgICAgbGFuZzogJ2VuJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcXVlcnlXZWF0aGVyOiB7XG4gICAgICAgICAgbWV0aG9kOiAnSlNPTlAnLFxuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgcGF0aDogJ3dlYXRoZXInXG4gICAgICAgICAgfSxcbiAgICAgICAgICBpc0FycmF5OiBmYWxzZSxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAneC1hcGkta2V5JzogYXBpS2V5XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBxdWVyeUZvcmVjYXN0OiB7XG4gICAgICAgICAgbWV0aG9kOiAnSlNPTlAnLFxuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgcGF0aDogJ2ZvcmVjYXN0JyxcbiAgICAgICAgICAgIGNudDogNVxuICAgICAgICAgIH0sXG4gICAgICAgICAgaXNBcnJheTogZmFsc2UsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ3gtYXBpLWtleSc6IGFwaUtleVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcXVlcnlGb3JlY2FzdERhaWx5OiB7XG4gICAgICAgICAgbWV0aG9kOiAnSlNPTlAnLFxuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgcGF0aDogJ2ZvcmVjYXN0JyxcbiAgICAgICAgICAgIHN1YlBhdGg6ICdkYWlseScsXG4gICAgICAgICAgICBjbnQ6IDdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGlzQXJyYXk6IGZhbHNlLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICd4LWFwaS1rZXknOiBhcGlLZXlcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApXG4gIH0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3dlYXRoZXJBcHAuY29udHJvbGxlcnMnLCBbXSlcbiAgLmNvbnRyb2xsZXIoJ09wZW5XZWF0aGVyQ3RybCcsXG4gICAgWyckc2NvcGUnLCdvcGVuV2VhdGhlck1hcCcsJ2NpdGllcycsJ0lTTzMxNjYnLFxuICAgICAgZnVuY3Rpb24oJHNjb3BlLG9wZW5XZWF0aGVyTWFwLGNpdGllcyxJU08zMTY2KSB7XG5cbiAgICAkc2NvcGUubWVzc2FnZSA9ICcnO1xuICAgICRzY29wZS5oYXNTdGF0ZSA9ICcnO1xuXG4gICAgJHNjb3BlLmNpdGllcyA9IGNpdGllcztcbiAgICAkc2NvcGUuaWNvbkJhc2VVcmwgPSAnaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvdy8nO1xuXG4gICAgLy8gR2V0IGRhaWx5IGZvcmVjYXN0IGZvciBpbml0aWFsIHBhZ2VcbiAgICAkc2NvcGUuZm9yZWNhc3QgPSBvcGVuV2VhdGhlck1hcC5xdWVyeUZvcmVjYXN0KHtcbiAgICAgIGxvY2F0aW9uOiBjaXRpZXNbIDAgXVxuICAgIH0pO1xuXG5cbiAgICAkc2NvcGUuZ2V0Rm9yZWNhc3RCeUxvY2F0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAkc2NvcGUuZm9yZWNhc3QgPSBvcGVuV2VhdGhlck1hcC5xdWVyeUZvcmVjYXN0KHtcbiAgICAgICAgbG9jYXRpb246ICRzY29wZS5sb2NhdGlvblxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIENoYW5nZSBjdXJyZW50IGxvY2F0aW9uIG9uIGJ1dHRvbnMgY2xpY2tzXG5cbiAgICAkc2NvcGUuc2V0TG9jYXRpb24gPSBmdW5jdGlvbihsb2MpIHtcbiAgICAgICRzY29wZS5sb2NhdGlvbiA9IGxvYztcbiAgICAgICRzY29wZS5nZXRGb3JlY2FzdEJ5TG9jYXRpb24oKTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmdldEljb25JbWFnZVVybCA9IGZ1bmN0aW9uKGljb25OYW1lKSB7XG4gICAgICByZXR1cm4gKGljb25OYW1lID8gJHNjb3BlLmljb25CYXNlVXJsICsgaWNvbk5hbWUgKyAnLnBuZycgOiAnJyk7XG4gICAgfTtcbn1dKVxuIiwiYW5ndWxhci5tb2R1bGUoJ3dlYXRoZXJBcHAuZmlsdGVycycsIFtdKVxuXG4gIC5maWx0ZXIoJ2ludGVycG9sYXRlJywgWyd2ZXJzaW9uJywgZnVuY3Rpb24odmVyc2lvbikge1xuICAgIHJldHVybiBmdW5jdGlvbih0ZXh0KSB7XG4gICAgICByZXR1cm4gU3RyaW5nKHRleHQpLnJlcGxhY2UoL1xcJVZFUlNJT05cXCUvbWcsIHZlcnNpb24pO1xuICAgIH1cbiAgfV0pXG5cbiAgLmZpbHRlcigncGxhY2Vob2xkZXInLCBbZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCxwaHZhbHVlKSB7XG4gICAgICByZXR1cm4gKGFuZ3VsYXIuaXNVbmRlZmluZWQoaW5wdXQpIHx8IGlucHV0ID09ICcnKSA/IHBodmFsdWUgOiBpbnB1dDtcbiAgICB9O1xuICB9XSlcbiIsImFuZ3VsYXIubW9kdWxlKCd3ZWF0aGVyQXBwLmRpcmVjdGl2ZXMnLCBbXSlcbiAgLmRpcmVjdGl2ZSgnZm9yZWNhc3RJdGVtJyxbZnVuY3Rpb24gZmFjdG9yeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2NvcGU6IHtcbiAgICAgICAgdXNlRGF5Rm9yZWNhc3Q6ICc9c2hvd0VudHJ5JyxcbiAgICAgICAgZm9yZWNhc3Q6ICc9Zm9yZWNhc3RJdGVtJyxcbiAgICAgIH0sXG5cbiAgICAgIHRlbXBsYXRlVXJsOiAnX2ZvcmVjYXN0LWl0ZW0uaHRtbCcsXG5cbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycykge1xuICAgICAgICBzY29wZS5nZXRJY29uSW1hZ2VVcmwgPSBmdW5jdGlvbihpY29uTmFtZSkge1xuICAgICAgICAgIHJldHVybiAoaWNvbk5hbWUgPyAnaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvdy8nICsgaWNvbk5hbWUgKyAnLnBuZycgOiAnJyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgc2NvcGUucGFyc2VEYXRlID0gZnVuY3Rpb24gKHRpbWUpIHtcbiAgICAgICAgICByZXR1cm4gbmV3IERhdGUodGltZSAqIDEwMDApO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgfV0pXG4iXX0=
